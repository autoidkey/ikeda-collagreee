<div class="row">
  <div class="col-md-offset-2 col-md-8">
    <div class="panel panel-default">
      <div class="panel-header">
        <h4 class=""><span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>投票フェーズ</h4>
      </div>
      <div class="panel-body">
        気に入った投稿に対してポイントを入れよう
      </div>
    </div>

    <div class="tab-content" id="theme-show">
      <div class="tab-pane active" id="discussion">

    		<div id="timeline">
          <%= form_tag(vote_entry_create_path, method: "POST") do %>
            <%= hidden_field_tag :theme_id, @theme.id %>
          	<% @entries.each_with_index do |entry, i| %>
              <div class="row">
                <div class="col-md-10">
            	    <%= render 'panel', entry: entry, count_entry: i, show_entry: -1 %>
                </div>
                <div class="col-md-2">
                  <%= select_tag "note[#{entry.id}]", options_for_select(["0","100", "200", "300", "400", "500", "600", "700", "800", "900", "1000"]), class: "vote_form" %>
                </div>
              </div>
          	<% end %>

            <%= submit_tag "投票する",class: "vote-submit-btn",id: "vote-btn-main",style: "display:none" %>
            <div class="vote-submit-btn" id="vote-btn-sub">投票する</div>

          <% end %>
        </div>
      </div>
    </div>

  </div>
</div>


<script>
  $('.vote_form option:selected').map(function(){
    console.log($(this).text())
  });

  $("#vote-btn-sub").click(function(){
    alert("合計を1000にしてください")
  });

  var select_sum = 0
  // セレクターの変更があったとき
  $(".vote_form").change(function(){
    select_sum = 0
    // すべてのセレクターの数値の合計を計算する
    $('.vote_form option:selected').map(function(){
      select_sum = select_sum + Number($(this).text())
    });

    //１０００以上になったらsubmitボタンを使えるようにする
    if(select_sum > 999){
      $("#vote-btn-sub").hide();
      $("#vote-btn-main").show();
    }else{
      $("#vote-btn-main").hide();
      $("#vote-btn-sub").show();
    }

    // セレクターの選択できる値を変更する
    $('.vote_form').map(function(){
      // まだ変更してないセレクターの選択できる値を変更する
      if($(this).val()=="0"){
        $(this).children().remove();
        for (var count = 1000; count > -1 ;count=count-100){
          if((count + select_sum) < 1001){
            $(this).prepend("<option value="+count+">"+count+"</option>")
          }
        }
        $(this).val("0");
      }else{
        //すでに選択されているセレクターの選択できる値を変更する
        value = $(this).val()
        $(this).children().remove();
        for (var count = 1000; count > -1 ;count=count-100){
          if((count + select_sum - value) < 1001){
            $(this).prepend("<option value="+count+">"+count+"</option>")
          }
        }
        $(this).val(value);
      }
    });

  });

  $("#vote-submit-btn").click(function(){
    select_sum = 0
    // すべてのセレクターの数値の合計を計算する
    $('.vote_form option:selected').map(function(){
      select_sum = select_sum + Number($(this).text())
    });
    if(select_sum <1000){
      console.log("stop")
      $("#vote-submit-btn").unbind();
    }
  })



  // 議論ツリー移動ボタンよう
  // グローバル変数
  var syncerTimeout = null ;
  // 一連の処理
  $( function(){
    // スクロールイベントの設定
    $( window ).scroll( function()
    {
      // 1秒ごとに処理
      if( syncerTimeout == null )
      {
        // セットタイムアウトを設定
        syncerTimeout = setTimeout( function(){

          // 対象のエレメント
          var element = $( '#page-top' ) ;
          // 現在、表示されているか？
          var visible = element.is( ':visible' ) ;
          // 最上部から現在位置までの距離を取得して、変数[now]に格納
          var now = $( window ).scrollTop() ;
          // 最下部から現在位置までの距離を計算して、変数[under]に格納
          var under = $( 'body' ).height() - ( now + $(window).height() ) ;
          // 最上部から現在位置までの距離(now)が1500以上かつ
          // 最下部から現在位置までの距離(under)が200px以上かつ…
          if( now > 1200 )
          {
            // 非表示状態だったら
            if( !visible )
            {
              // [#page-top]をゆっくりフェードインする
              element.fadeIn( 'slow' ) ;
            }
          }
          // 1500px以下かつ
          // 表示状態だったら
          else if( visible )
          {
            // [#page-top]をゆっくりフェードアウトする
            element.fadeOut( 'slow' ) ;
          }
          // フラグを削除
          syncerTimeout = null ;
        } , 1000 ) ;
      }
    } ) ;

    // クリックイベントを設定する
    $( '#move-page-top' ).click(
        function()
        {
          // スムーズにスクロールする
          $( 'html,body' ).animate( {scrollTop:0} , 'slow' ) ;
          $("#tree-nav-btn").parents('li').addClass("active");
          $("#discussion-nav-btn").parents('li').removeClass("active");
        }
    ) ;

    $('[id^=entry-top-hidden]')
    // マウスポインターが画像に乗った時の動作
    .mouseover(function(e) {
        $(this).css('opacity','0.5');
        // $(this).css('background','#e1e8ed');
        $(this).css('cursor','pointer');
    })
    // マウスポインターが画像から外れた時の動作
    .mouseout(function(e) {
      $(this).css('opacity','1');
        // $(this).css('background','white');
        $(this).css('cursor','default');
    });

    $('[id^=entry-top-hidden]').click(function(){
      $("#child-entry-hidden"+$(this).attr('entry-id')).show();
      $('#entry-child-count'+$(this).attr('entry-id')).remove();
      $('#entry-top-hidden'+$(this).attr('entry-id')).unbind();
      $(this).css('opacity','1');
      $(this).css('cursor','default');
    });

    $('[id^=child-entry-hidden]').hide();

  });

  $(window).bind("beforeunload", function() {

    var user = <%= raw current_user.id.to_json %>;
    var theme = <%= raw @theme.id.to_json %>;

    $.ajax({
      url: "tree/change_session_year",
      type: "POST",
      data: {user_id : user,
        theme: theme,
        flag: true,
      },
      dataType: "html",
      success: function(data) {
      },
      error: function(data) {
        console.log(data);
      }
    });
  });

  //フェーズの表示
  var core_times = <%= raw @theme.core_times_check.to_json %>

  if ("now" in core_times) {
    for (var i = 0; i < core_times["now"].length; i++){
      dt = new Date(core_times["now"][i]["start_at"]);
      var text1 = (dt.getMonth() + 1)+"."+(dt.getDate())+" "+(dt.getHours())+":"+(dt.getMinutes()+"0");
      dt = new Date(core_times["now"][i]["end_at"]);
      var text2 = (dt.getHours())+":"+(dt.getMinutes()+"0");
      $('#core-time-content').append("<span style='margin-right:20px; font-size:22px; color: #f39800'>"+text1+" - "+text2+"</span>");
    }
    $('#header-time').show();
  }

  if ("yes" in core_times) {
    for (var i = 0; i < core_times["yes"].length; i++){
      dt = new Date(core_times["yes"][i]["start_at"]);
      var text1 = (dt.getMonth() + 1)+"."+(dt.getDate())+" "+(dt.getHours())+":"+(dt.getMinutes()+"0");
      dt = new Date(core_times["yes"][i]["end_at"]);
      var text2 = (dt.getHours())+":"+(dt.getMinutes()+"0");
      $('#core-time-content').append("<span style='margin-right:20px; font-size:22px;'>"+text1+" - "+text2+"</span>");
    }
    $('#header-time').show();
  }

  // #で始まるアンカーをクリックした場合に処理
   $('a[href^=#entry]').click(function() {
      // スクロールの速度
      var speed = 500; // ミリ秒
      // アンカーの値取得
      var href= $(this).attr("href");
      // 移動先を取得
      var target = $(href == "#" || href == "" ? 'html' : href);
      // 移動先を数値で取得
      var position = target.offset().top - 30;
      // スムーススクロール
      $('body,html').animate({scrollTop:position}, speed, 'swing');
      return false;
   });

   // formの文字制限を促進させるjs
   $('textarea').bind('keydown keyup keypress change',function(){
      var thisValueLength = $(this).val().length;
      // $('.count').html(thisValueLength);
      if(thisValueLength > 200 && thisValueLength < 351 ){
        $(this).attr('id', 'form-change-color-green');
      }else if(thisValueLength > 350){
        $(this).attr('id', 'form-change-color-red');
      }else{
        $(this).attr('id', 'entry_body');
      }
    });



</script>